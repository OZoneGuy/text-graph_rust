openapi: 3.0.0

info:
  title: text-graph_rust
  version: 0.1.0

servers:
  - url: '{schema}://{host}:{port}/{basePath}'
    variables:
      port:
        enum:
          - '8000'
          - '8080'
        default: '8000'
      basePath:
        default: api/v1/
      host:
        default: localhost
      schema:
        enum:
          - https
          - http
        default: http

tags:
  - name: auth
    description: Requires authentication to access
  - name: topics
    description: Endpoints related to topics.
  - name: ref
    description: Endpoints related to references.
  - name: login
    description: Login related endpoints

paths:
  ## Root endpoints
  /:
    get:
      operationId: root
      responses:
        '200':
          description: 'Root page, returns a string.'
          content:
            text/plain:
              schema:
                type: string

  /healthz:
    get:
      operationId: health
      responses:
        '200':
          description: 'Healthy server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
        '500':
          description: 'Unhealthy server :('
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'

  ## Topics endpoints
  /topics:
    get:
      tags:
        - topics
      operationId: get_topics
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int64
            nullable: true
        - name: size
          in: query
          schema:
            type: integer
            format: int64
            nullable: true
      responses:
        '200':
          description: 'Returns all list of topics'
          content:
            application/json:
              schema:
                  type: array
                  items:
                    type: string
        '500':
          $ref: '#/components/responses/Error'

    post:
      tags:
        - topics
      operationId: add_topic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTopic'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generic'
        '500':
          $ref: '#/components/responses/Error'

    delete:
      tags:
        - topics
      operationId: delete_topic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTopic'
        required: true
      responses:
        '200':
          description: 'Successfully deleted topic'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generic'
        '400':
          description: 'Could not find topic'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/Error'

  ## Refs related endpoints
  /refs/{topic}:
    get:
      tags:
        - ref
      operationId: get_references
      parameters:
        - name: topic
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'The list of refs for the topic'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RefEnum'
        '500':
          $ref: '#/components/responses/Error'

  /refs/qref/{topic}:
    post:
      description: 'Add a new Quranic reference to the topic'
      operationId: add_qref
      parameters:
        - name: topic
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QRefParams'
        required: true
      responses:
        '200':
          description: 'Successfully add Quranic reference'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
        '400':
          description: Topic doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/Error'

  /refs/href/{topic}:
    post:
      tags:
        - ref
      description: 'Add a new Hadith reference to the topic'
      operationId: add_href
      parameters:
        - name: topic
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HRefParams'
        required: true
      responses:
        '200':
          description: 'Successfully add a Hadith reference'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
        '400':
          description: Topic doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/Error'

  ## Login and user related endpoints
  /auth/login:
    get:
      tags:
        - auth
      operationId: login
      responses:
        '302':
          description: Used to login. Redirects to Azure AD, should not be used programatically.

  /auth/user:
    get:
      tags:
        - auth
      operationId: user
      responses:
        '200':
          description: 'Get current user data'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: 'User is not authorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/Error'


components:
  schemas:

    Generic:
      type: object
      required:
        - message
        - version
      properties:
        message:
          type: string
        version:
          type: string

    Health:
      type: object
      required:
        - status
        - version
      properties:
        message:
          type: array
          items:
            type: object
            required:
              - component
              - status
            properties:
              component:
                type: string
              status:
                type: string
              version:
                type: string

    Error:
      type: object
      required:
        - message
        - version
      properties:
        message:
          type: string
        version:
          type: string

    NewTopic:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        id:
          type: string
          nullable: true

    RefEnum:
      oneOf:
        - $ref: '#/components/schemas/QRefParams'
        - $ref: '#/components/schemas/HRefParams'
        - $ref: '#/components/schemas/BRefParams'

    QRefParams:
      type: object
      required:
        - chapter
        - final_verse
        - init_verse
      properties:
        chapter:
          type: integer
          format: int64
        init_verse:
          type: integer
          format: int64
        final_verse:
          type: integer
          format: int64

    HRefParams:
      type: object
      required:
        - collection
        - number
      properties:
        collection:
          type: string
        number:
          type: string

    BRefParams:
      type: object
      required:
        - isbn
        - name
        - page
      properties:
        isbn:
          type: string
        name:
          type: string
        page:
          type: integer
          format: int64

    User:
      type: object
      required:
        - name
        - email
      properties:
        name:
          type: string
        email:
          type: string

  responses:
    Error:
      description: 'Server Error'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
