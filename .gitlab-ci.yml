# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Rust.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/rust/tags/
image: "rust:latest"

# Optional: Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ee/ci/docker/using_docker_images.html#what-is-a-service
# services:
#   - mysql:latest
#   - redis:latest
#   - postgres:latest

# Optional: Install a C compiler, cmake and git into the container.
# You will often need this when you (or any of your dependencies) depends on C code.
# before_script:
#   - apt-get update -yqq
#   - apt-get install -yqq --no-install-recommends build-essential

before_script:
  - rustc --version && cargo --version && rustup --version  # Print version info for debugging
  - cd server

stages:
  - lint
  - test
  - build

cache: &golbal_cache
  key: "rust-$CI_COMMIT_REF_SLUG"
  paths:
    - server/target/debug

lint:
  stage: lint
  script:
    - echo -e "\e[0Ksection_start:`date +%s`:installing_tools_section\r\e[0KInstalling Tools..."
    - rustup component add clippy
    - rustup component add rustfmt
    - echo -e "\e[0Ksection_end:`date +%s`:installing_tools_section\r\e[0K"

    - echo -e "\e[0Ksection_start:`date +%s`:rustfmt_section\r\e[0KRustfmt..."
    - rustfmt --check
    - echo -e "\e[0Ksection_end:`date +%s`:rustfmt_section\r\e[0K"

    - echo -e "\e[0Ksection_start:`date +%s`:clippy_section\r\e[0KClippy..."
    - cargo clippy -- -D warnings
    - echo -e "\e[0Ksection_end:`date +%s`:clippy_section\r\e[0K"

# Use cargo to test the project
test:cargo:
  stage: test
  script:
    - echo -e "\e[0Ksection_start:`date +%s`:installing_nextest_section\r\e[0KInstalling Nextest..."
    - curl -LsSf https://get.nexte.st/latest/linux | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
    - echo -e "\e[0Ksection_end:`date +%s`:installing_nextest_section\r\e[0K"

    - echo -e "\e[0Ksection_start:`date +%s`:testing_section\r\e[0KTesting..."
    - cargo nextest run --profile ci
    - echo -e "\e[0Ksection_end:`date +%s`:testing_section\r\e[0K"
  artifacts:
    when: always
    reports:
      junit: server/target/nextest/ci/junit.xml

build:
  stage: build
  script:
    - cargo build
